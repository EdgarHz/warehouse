#!/bin/sh
source zrWarehouseCommon.sh

if [ "$#" -eq 0 ]; then   # 脚本需要至少一个命令行参数.
  echo "Usage $0 -[options k,nc]"
  exit -1
fi

foreachd(){
    local pathdir=$1
    local Files=`ls $pathdir`;
    for file in $Files;
    do
        if [ -d "$file" ]; then
            cd $pathdir/$file 
            if [[ -d ".git" ]]; then
                local gitRemote=$(gitUrl)
                local gitShortName=$(gitShortName)
                echo "----------at: $pathdir/$file find git:$gitRemote"
                writeInfoToList "git" $gitShortName $gitRemote ""
                mvDirIfExistMoveToBackup `pwd` $RepoRootDir $gitShortName $BackupDir
            elif [[ -d ".svn" ]]; then
                local svnURL=$(svnUrl)
                local svnShortName=$(svnShortName)
                echo "----------at: $pathdir/$file find svn:$svnURL"
                writeInfoToList "svn" $svnShortName $svnURL ""
                mvDirIfExistMoveToBackup  `pwd` $RepoRootDir $svnShortName $BackupDir
            elif [[ $(fossilIsUnderControl) -eq  0 ]]; then
                local url=$(fossilUrl)
                local shortName=$(fossilShortName)
                echo "----------at: $pathdir/$file find fossil:$url"
                writeInfoToList "fossil" $shortName $url ""
                mvDirIfExistMoveToBackup  `pwd` $RepoRootDir $shortName  $BackupDir
            elif [ "${file##*.}" != 'xcworkspace' ] && [ "${file##*.}" != 'xcodeproj' ] && [ "${file##*.}" != 'lproj' ]; then
                # echo "foreachd $pathdir/$file"
                foreachd  $pathdir/$file
            fi
            cd "$pathdir"
        fi
    done
}

echo `pwd`
if [[ -d $1 ]]; then
    cd $1
elif [[ -d "./$1" ]]; then
    cd "./$1"
else
    echo "bad path"
    exit -1;
fi

SourceDir=`pwd`
BackupDir="$SourceDir/backupAsExist_"
foreachd `pwd`


